***************
*** 9,31 ****
  // Layer names don't all need to be of the same length, obviously, and you can also skip them
  // entirely and just use numbers.
  #define _QW 0
- #define _CM 1
  #define _DV 2
  #define _LW 3
  #define _RS 4
  
  const uint16_t PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = {
  [_QW] = { /* Qwerty */
-   {KC_TAB,  KC_Q,    KC_W,    KC_E,    KC_R,    KC_T,    KC_Y,    KC_U,    KC_I,    KC_O,    KC_P,    KC_BSPC},
-   {KC_ESC,  KC_A,    KC_S,    KC_D,    KC_F,    KC_G,    KC_H,    KC_J,    KC_K,    KC_L,    KC_SCLN, KC_QUOT},
-   {KC_LSFT, KC_Z,    KC_X,    KC_C,    KC_V,    KC_B,    KC_N,    KC_M,    KC_COMM, KC_DOT,  KC_SLSH, KC_ENT },
-   {M(0),    KC_LCTL, KC_LALT, KC_LGUI, MO(_LW), KC_SPC,  KC_SPC,  MO(_RS), KC_LEFT, KC_DOWN, KC_UP,   KC_RGHT}
  },
- [_CM] = { /* Colemak */
-   {KC_TAB,  KC_Q,    KC_W,    KC_F,    KC_P,    KC_G,    KC_J,    KC_L,    KC_U,    KC_Y,    KC_SCLN, KC_BSPC},
-   {KC_ESC,  KC_A,    KC_R,    KC_S,    KC_T,    KC_D,    KC_H,    KC_N,    KC_E,    KC_I,    KC_O,    KC_QUOT},
-   {KC_LSFT, KC_Z,    KC_X,    KC_C,    KC_V,    KC_B,    KC_K,    KC_M,    KC_COMM, KC_DOT,  KC_SLSH, KC_ENT },
-   {M(0),    KC_LCTL, KC_LALT, KC_LGUI, MO(_LW), KC_SPC,  KC_SPC,  MO(_RS), KC_LEFT, KC_DOWN, KC_UP,   KC_RGHT}
  },
  [_DV] = { /* Dvorak */
    {KC_TAB,  KC_QUOT, KC_COMM, KC_DOT,  KC_P,    KC_Y,    KC_F,    KC_G,    KC_C,    KC_R,    KC_L,    KC_BSPC},
--- 9,32 ----
  // Layer names don't all need to be of the same length, obviously, and you can also skip them
  // entirely and just use numbers.
  #define _QW 0
+ #define SYMB 1
  #define _DV 2
  #define _LW 3
  #define _RS 4
+ #define BOOTLOADER 5
  
  const uint16_t PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = {
  [_QW] = { /* Qwerty */
+   {KC_TAB,          KC_Q,    KC_W,    KC_D,    KC_F,          KC_K,    KC_J,    KC_U,          KC_R,    KC_L,    KC_SCLN, KC_BSPC},
+   {CTL_T(KC_EQL),   KC_A,    KC_S,    KC_E,    KC_T,          KC_G,    KC_Y,    KC_N,          KC_I,    KC_O,    KC_H,    KC_QUOT},
+   {KC_LSFT,         KC_Z,    KC_X,    KC_C,    KC_V,          KC_B,    KC_P,    KC_M,          KC_COMM, KC_DOT,  KC_SLSH, KC_RSFT},
+   {LT(SYMB,KC_GRV), M(0),    KC_TAB,  KC_LALT, GUI_T(KC_ENT), KC_SPC,  KC_SPC,  CTL_T(KC_ESC), KC_RALT, KC_LBRC, KC_RBRC, LT(SYMB,KC_MINS)}
  },
+ [SYMB] = { /* Colemak */
+   {KC_TAB,  KC_EXLM, KC_AT,   KC_LCBR, KC_RCBR, KC_PIPE, KC_UP,   KC_7,    KC_8,    KC_9,  KC_ASTR, KC_LEFT},
+   {KC_ESC,  KC_HASH, KC_DLR,  KC_LPRN, KC_RPRN, KC_GRV,  KC_DOWN, KC_4,    KC_5,    KC_6,  KC_PLUS, KC_RIGHT},
+   {KC_LSFT, KC_PERC, KC_CIRC, KC_LBRC, KC_RBRC, KC_TILD, KC_AMPR, KC_1,    KC_2,    KC_3,  KC_BSLS, KC_ENT },
+   {KC_TRNS, M(5),    KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_0,    KC_EQL,KC_UP,   KC_TRNS }
  },
  [_DV] = { /* Dvorak */
    {KC_TAB,  KC_QUOT, KC_COMM, KC_DOT,  KC_P,    KC_Y,    KC_F,    KC_G,    KC_C,    KC_R,    KC_L,    KC_BSPC},
***************
*** 36,48 ****
  [_RS] = { /* RAISE */
    {KC_GRV,  KC_1,    KC_2,    KC_3,    KC_4,    KC_5,    KC_6,    KC_7,    KC_8,    KC_9,    KC_0,    KC_BSPC},
    {KC_TRNS, KC_F1,   KC_F2,   KC_F3,   KC_F4,   KC_F5,   KC_F6,   KC_MINS, KC_EQL,  KC_LBRC, KC_RBRC, KC_BSLS},
-   {KC_TRNS, KC_F7,   KC_F8,   KC_F9,   KC_F10,  KC_F11,  KC_F12,  DF(_QW), DF(_CM), DF(_DV), RESET,   KC_TRNS},
    {KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_MNXT, KC_VOLD, KC_VOLU, KC_MPLY}
  },
  [_LW] = { /* LOWER */
    {KC_TILD, KC_EXLM, KC_AT,   KC_HASH, KC_DLR,  KC_PERC, KC_CIRC, KC_AMPR, KC_ASTR, KC_LPRN, KC_RPRN, KC_BSPC},
    {KC_TRNS, KC_F1,   KC_F2,   KC_F3,   KC_F4,   KC_F5,   KC_F6,   KC_UNDS, KC_PLUS, KC_LCBR, KC_RCBR, KC_PIPE},
-   {KC_TRNS, KC_F7,   KC_F8,   KC_F9,   KC_F10,  KC_F11,  KC_F12,  DF(_QW), DF(_CM), DF(_DV), RESET,   KC_TRNS},
    {KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_MNXT, KC_VOLD, KC_VOLU, KC_MPLY}
  }
  };
--- 37,49 ----
  [_RS] = { /* RAISE */
    {KC_GRV,  KC_1,    KC_2,    KC_3,    KC_4,    KC_5,    KC_6,    KC_7,    KC_8,    KC_9,    KC_0,    KC_BSPC},
    {KC_TRNS, KC_F1,   KC_F2,   KC_F3,   KC_F4,   KC_F5,   KC_F6,   KC_MINS, KC_EQL,  KC_LBRC, KC_RBRC, KC_BSLS},
+   {KC_TRNS, KC_F7,   KC_F8,   KC_F9,   KC_F10,  KC_F11,  KC_F12,  DF(_QW), DF(SYMB), DF(_DV), RESET,   KC_TRNS},
    {KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_MNXT, KC_VOLD, KC_VOLU, KC_MPLY}
  },
  [_LW] = { /* LOWER */
    {KC_TILD, KC_EXLM, KC_AT,   KC_HASH, KC_DLR,  KC_PERC, KC_CIRC, KC_AMPR, KC_ASTR, KC_LPRN, KC_RPRN, KC_BSPC},
    {KC_TRNS, KC_F1,   KC_F2,   KC_F3,   KC_F4,   KC_F5,   KC_F6,   KC_UNDS, KC_PLUS, KC_LCBR, KC_RCBR, KC_PIPE},
+   {KC_TRNS, KC_F7,   KC_F8,   KC_F9,   KC_F10,  KC_F11,  KC_F12,  DF(_QW), DF(SYMB), DF(_DV), RESET,   KC_TRNS},
    {KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_MNXT, KC_VOLD, KC_VOLU, KC_MPLY}
  }
  };
***************
*** 53,58 ****
  
  const macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt)
  {
    // MACRODOWN only works in this function
        switch(id) {
          case 0:
--- 54,70 ----
  
  const macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt)
  {
+     if (id == BOOTLOADER) {
+ 	clear_keyboard();
+ 	print("\n\nJump to bootloader... ");
+ 	// _delay_ms(250);
+ 
+ 	*(uint16_t *)0x0800 = 0x7777; // these two are a-star-specific
+ 	// wdt_enable(WDTO_120MS);
+ 
+ 	bootloader_jump(); // should not return
+ 	print("not supported.\n");
+     }
    // MACRODOWN only works in this function
        switch(id) {
          case 0:
